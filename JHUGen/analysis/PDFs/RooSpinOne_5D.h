/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOSPINONE_5D
#define ROOSPINONE_5D

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class RooSpinOne_5D : public RooAbsPdf {
public:
  RooSpinOne_5D() {} ; 
  RooSpinOne_5D(const char *name, const char *title,
	      RooAbsReal& _h1,
	      RooAbsReal& _h2,
	      RooAbsReal& _hs,
	      RooAbsReal& _Phi,
	      RooAbsReal& _Phi1,
	      RooAbsReal& _fp0Val,
	      RooAbsReal& _phip0Val,
	      RooAbsReal& _phi0mVal,
	      RooAbsReal& _R1Val,
	      RooAbsReal& _R2Val,
				RooAbsReal& _aParam);
  RooSpinOne_5D(const RooSpinOne_5D& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooSpinOne_5D(*this,newname); }
  inline virtual ~RooSpinOne_5D() { }

	Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
	Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

	
protected:

  RooRealProxy h1 ;
  RooRealProxy h2 ;
  RooRealProxy hs ;
  RooRealProxy Phi ;
  RooRealProxy Phi1 ;
  RooRealProxy fp0Val ;
  RooRealProxy phip0Val ;
  RooRealProxy phi0mVal ;
  RooRealProxy R1Val ;
  RooRealProxy R2Val ;
	RooRealProxy aParam ;
  
  Double_t evaluate() const ;

private:

  ClassDef(RooSpinOne_5D,1) // Your description goes here...
};
 
#endif
